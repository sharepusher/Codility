1. There are Four elements we should take consideration of the bottleneck of kafka cluster: Disk, Memory, CPU, network.
Network and Disk limitation is easy to know, No matter you are using a physical box or a virtual one.
1) The throughput of a network interface/adapter can be check easily or ask your vendor, if your network adapter support 1Gbit/s, 
then which means 125MB/s throughput (1MByte/s = 8Mbit/s).
2) The disk I/O limitation can be acquired by dd command.
Kafka is using the sequential I/O, therefore we'll test the disk with oflag=dsync(synchronized I/O),this option get rid of caching,
and gives you good and accurate results. 
# use dd command to measure server throughput (write speed)
dd if=/dev/zero of=testdisk bs=1G count=1 oflag=dsync 
 

2. Kafka provide simple embeded performance test tool, but we have to download the source code and compile accordingly
   1) download kafka source code from http://kafka.apache.org/downloads or github;
   2) java( >1.8) and gradle (>2.0) required
   3) compile according to readme.
      cd kafka_source_dir; gradle; ./gradlew jar; ./gradlew releaseTarGz -x signArchives (sudo may be required in the process)
   4) get the release file inside './core/build/distributions/'
3. Run performance test according to linkedin blog


# Reference
https://engineering.linkedin.com/kafka/benchmarking-apache-kafka-2-million-writes-second-three-cheap-machines
https://db-blog.web.cern.ch/blog/prasanth-kothuri/2016-10-benchmarking-apache-kafka-openstack-vms
https://hackernoon.com/benchmarking-kafka-performance-part-1-write-throughput-7c7a76ab7db1
http://activisiongamescience.github.io/2016/06/15/Kafka-Client-Benchmarking/
https://www.autoletics.com/posts/iterative-performance-benchmarking-of-apache-kafka-part-1
http://www.infoq.com/cn/articles/kafka-analysis-part-5
# Gbit/s => MB/s
https://www.gbmb.org/gbps-to-mbs
# dd test disk I/O performance
https://www.cyberciti.biz/faq/howto-linux-unix-test-disk-performance-with-dd-command/



